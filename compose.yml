services:
  front:
    container_name: 'dtf_frontend'
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        GENERATE_SOURCEMAP: false
    labels:
      caddy.reverse_proxy: '{{upstreams 80}}'
      caddy: 'dtf.thatsamefox.ru'
    networks:
      - caddy
    environment:

  back:
    container_name: 'dtf_backend'
    build: ./backend
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgress:5432/${POSTGRES_DB}?connection_limit=15
    labels:
      caddy_0: "dtf.thatsamefox.ru"
      caddy_0.handle_path: "/api/*"
      caddy_0.handle_path.0_rewrite: "* /api{uri}"
      caddy_0.handle_path.1_reverse_proxy: "{{upstreams 3001}}"

      caddy_1: "dtf.thatsamefox.ru"
      caddy_1.handle_path: "/upload/*"
      caddy_1.handle_path.0_rewrite: "* /upload{uri}"
      caddy_1.handle_path.1_reverse_proxy: "{{upstreams 3001}}"
    networks:
      - caddy
      - dtf
    volumes:
      - /home/nick/dtf/upload:/usr/src/app/upload

  db:
    image: postgres:16
    container_name: 'dtf_database'
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - /home/nick/dtf/db:/var/lib/postgresql/data
    networks:
      dtf:
        aliases:
          - postgress

networks:
  caddy:
    external: true
  dtf:
